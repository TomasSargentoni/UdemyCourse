{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","normalize","replace","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n    const horas = document.querySelector(\"#horas\");\r\n\r\n    if(horas) {\r\n\r\n        let busqueda = {\r\n            categoria_id: \"\",\r\n            dia: \"\"\r\n        }\r\n\r\n        const categoria = document.querySelector(\"[name='categoria_id']\")\r\n        const dias = document.querySelectorAll(\"[name='dia']\");\r\n        const inputHiddenDia = document.querySelector(\"[name='dia_id']\");\r\n        const inputHiddenHora = document.querySelector(\"[name='hora_id']\");\r\n\r\n        categoria.addEventListener(\"change\", terminoBusqueda)\r\n        dias.forEach( dia => dia.addEventListener(\"change\", terminoBusqueda) )\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = \"\";\r\n            inputHiddenDia.value = \"\";\r\n\r\n            const horaPrevia = document.querySelector(\".horas__hora--seleccionada\")\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\r\n            }\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n        \r\n        async function buscarEventos() {\r\n\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos)\r\n\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll(\"#horas li\");\r\n            listadoHoras.forEach(li => li.classList.add(\"horas__hora--deshabilitada\"));\r\n\r\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n\r\n            const horasTomadas = eventos.map( evento => evento.hora_id );\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            \r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId) );\r\n            resultado.forEach( li => li.classList.remove(\"horas__hora--deshabilitada\"));\r\n\r\n\r\n            const horasDisponibles = document.querySelectorAll(\"#horas li:not(.horas__hora--deshabilitada)\")\r\n            horasDisponibles.forEach( hora => hora.addEventListener(\"click\", seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector(\".horas__hora--seleccionada\")\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\r\n            }\r\n\r\n            // agregar clase de seleccionado\r\n            e.target.classList.add(\"horas__hora--seleccionada\");\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId\r\n\r\n            // Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector(\"[name='dia']:checked\").value\r\n        }\r\n    }\r\n})();","(function() {\r\n    const ponentesInput = document.querySelector(\"#ponentes\");\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector(\"#listado-ponentes\")\r\n        const ponenteHidden = document.querySelector(\"[name='ponente_id']\")\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener(\"input\", buscarPonentes )\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length >= 3) {\r\n                const expresion = new RegExp(busqueda.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"), \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase().search(expresion) != -1) {\r\n                        return ponente\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n            \r\n        function mostrarPonentes() {\r\n\r\n            while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement(\"LI\");\r\n                    ponenteHTML.classList.add(\"listado-ponentes__ponente\");\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                    // AÃ±adir al dom\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })  \r\n            }\r\n             else {\r\n                 if(ponentesInput.value.length >=3 ) {\r\n                    const noResultados = document.createElement(\"P\");\r\n                    noResultados.classList.add(\"listado-ponentes__no-resultado\");\r\n                    noResultados.textContent = 'No hay resultados para tu bÃºsqueda'\r\n                    listadoPonentes.appendChild(noResultados);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover la clase previa\r\n            const ponentePrevio = document.querySelector(\".listado-ponentes__ponente--seleccionado\");\r\n            if(ponentePrevio) {\r\n                ponentePrevio.classList.remove(\"listado-ponentes__ponente--seleccionado\")\r\n            }\r\n\r\n\r\n            ponente.classList.add(\"listado-ponentes__ponente--seleccionado\")\r\n\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function () {\r\n    const tagsInput = document.querySelector(\"#tags_input\");\r\n\r\n    if(tagsInput) {\r\n        \r\n        const tagsDiv = document.querySelector(\"#tags\");\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== \"\") {\r\n            tags = tagsInputHidden.value.split(\",\");\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener(\"keypress\", guardarTag)\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) {\r\n\r\n                if(e.target.value.trim() === \"\" || e.target.value < 1) {\r\n                    return\r\n                }\r\n                e.preventDefault();\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n\r\n                tagsInput.value = \"\";\r\n             \r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = \"\";\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement(\"LI\");\r\n                etiqueta.classList.add(\"formulario__tag\");\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n        \r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})() // IIFE\r\n"]}